@using PaymentAutomation.Models
@using System.Linq
@using PaymentAutomation.Utilities
@model (DateOnly weekEndingDate, IReadOnlyCollection<Booking> bookings, IReadOnlyCollection<Adjustment> adjustments)

@{
    var (weekEndingDate, bookings, adjustments) = Model;
}

<html>
    <head>
        <style>
            body {
                background-color: white;
                color: black;
            }

            .footer-title {
                font-weight: bold;
            }

            .table-title-lg {
                font-size: 16pt;
            }

            .table-title-md {
                font-size: 14pt;
            }

            .table-title-sm {
                font-size: 12pt;
            }

            .align-center {
                text-align: center;
            }

            .align-right {
                text-align: right;
            }

            .full-width {
                width: 100%;
            }

            .float-right {
                float: right;
            }

            .text-muted {
                color: #777777;
            }

            .table {
                border-collapse: collapse;
            }

            .table td, .table th {
                padding: 2px;
                font-size: 12px;
            }

            .table.is-bordered td, .table.is-bordered th {
                border: 1px solid lightgray;
            }

            .table.is-striped tbody tr:nth-child(even) {
                background-color: #f0f0f0;
            }

            .table.is-striped tbody tr:nth-child(odd) {
                background-color: white;
            }

            .table tfoot tr:first-of-type {
                border-top: 4px solid lightgray;
            }
        </style>
    </head>

    <body>
        <table class="full-width">
            <tr>
                <td class="table-title-lg">
                    <span style="font-weight: bold;">Agency:</span> CruiseOne Darci Upham
                </td>
                <td class="table-title-sm float-right text-muted">
                    <span style="font-weight: bold;">Week Ending:</span> @weekEndingDate
                </td>
            </tr>
        </table>

        <br />

        <table class="table is-bordered is-striped full-width">
            <thead>
                <tr>
                    <th colspan="16" class="font-size-md">Bookings</th>
                </tr>
                <tr>
                    <th rowspan="2">Agent</th>
                    <th rowspan="2">Travel Order #</th>
                    <th rowspan="2">Guest</th>
                    <th rowspan="2">Supplier</th>
                    <th rowspan="2">Trip Start</th>
                    <th rowspan="2">Trip Book</th>
                    <th rowspan="2">Comm. Sale Price</th>
                    <th colspan="4" style="text-align: center;">Royalty</th>
                    <th colspan="2" style="text-align: center;">Commission</th>
                    <th rowspan="2">Amt Paid Prior</th>
                    <th colspan="2" style="text-align: center;">Franchise</th>
                </tr>
                <tr>
                    <th>%</th>
                    <th>Amt</th>
                    <th>Paid</th>
                    <th>Paid/ Period</th>
                    <th>Total</th>
                    <th>Total Franchise</th>
                    <th>Paid/ Period</th>
                    <th>Due</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var booking in bookings.OrderBy(b => (b!.Agent.LastName, b.Agent.FirstName, b.TripBookDate)))
                {
                    <tr>
                        <td>
                            @booking.Agent.FullName
                        </td>
                        <td>
                            @booking.BookingId
                        </td>
                        <td>
                            @booking.PassengerName
                        </td>
                        <td>
                            @booking.Supplier
                        </td>
                        <td>
                            @booking.TripStartDate
                        </td>
                        <td>
                            @booking.TripBookDate
                        </td>
                        <td>
                            @booking.CommissionablePrice.ToString("C")
                        </td>
                        <td>
                            @((@booking.ServiceFeePercent / 100).ToString("P1"))
                        </td>
                        <td>
                            @booking.ServiceFeeAmount.ToString("C")
                        </td>
                        <td>
                            @booking.ServiceFeePaid.ToString("C")
                        </td>
                        <td>
                            @booking.ServiceFeePayable.ToString("C")
                        </td>
                        <td>
                            @booking.CommissionTotalAmount.ToString("C")
                        </td>
                        <td>
                            @booking.CommissionFranchiseAmount.ToString("C")
                        </td>
                        <td>
                            @booking.AmountPaidPrior.ToString("C")
                        </td>
                        <td>
                            @booking.FranchisePayable.ToString("C")
                        </td>
                        <td>
                            @booking.FranchiseDueAmount.ToString("C")
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <br />

        @if (adjustments.Any())
        {
            <table class="table is-bordered is-striped full-width">
                <thead>
                    <tr>
                        <th colspan="16" class="font-size-md">Adjustments</th>
                    </tr>
                    <tr>
                        <th rowspan="2">
                            Agent
                        </th>
                        <th rowspan="2">
                            Adjustment Type
                        </th>
                        <th rowspan="2">
                            Details
                        </th>
                        <th rowspan="2">
                            Royalty Paid/Period
                        </th>
                        <th colspan="2" style="text-align: center;">
                            Commission
                        </th>
                        <th rowspan="2">
                            Amt Paid Prior
                        </th>
                        <th colspan="2" style="text-align: center;">
                            Franchise
                        </th>
                    </tr>
                    <tr>
                        <th>
                            Total
                        </th>
                        <th>
                            Total Franchise
                        </th>
                        <th>
                            Paid/ Period
                        </th>
                        <th>
                            Due
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var adjustment in adjustments.OrderBy(a => (a!.Agent.LastName, a.Agent.FirstName)))
                    {
                        <tr>
                            <td>
                                @adjustment.Agent.FullName
                            </td>
                            <td>
                                @adjustment.Type.Value
                            </td>
                            <td>
                                @adjustment.Description
                            </td>
                            <td>
                                @adjustment.ServiceFeePayable.ToString("C")
                            </td>
                            <td>
                                @adjustment.CommissionTotalAmount.ToString("C")
                            </td>
                            <td>
                                @adjustment.CommissionFranchiseAmount.ToString("C")
                            </td>
                            <td>
                                @adjustment.AmountPaidPrior.ToString("C")
                            </td>
                            <td>
                                @adjustment.FranchisePayable.ToString("C")
                            </td>
                            <td>
                                @adjustment.FranchiseDueAmount.ToString("C")
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <br />
        }

        @{
            var subtotals = bookings
                .Select(b => b.Agent)
                .Union(adjustments.Select(a => a.Agent), new AgentEqualityComparer())
                .Select(agent =>
                {
                    var agentBookings = bookings.Where(b => b.Agent.Id == agent.Id);
                    var bookingsTotal = agentBookings.Sum(b => b.FranchisePayable);
                    var agentAdjustments = adjustments.Where(a => a.Agent.Id == agent.Id);
                    var adjustmentsTotal = agentAdjustments.Sum(a => a.FranchisePayable);

                    return new
                    {
                        Agent = agent,
                        Total = bookingsTotal + adjustmentsTotal,
                    };
                })
                .OrderByDescending(subtotal => subtotal.Total);

            var totalCommission = subtotals.Sum(s => s.Total);
            var feeTotal = 0m;
        }
        <table class="table is-bordered is-striped is-size-7">
            <thead>
                <tr>
                    <th>Agent</th>
                    <th>Total Commission</th>
                    <th>Fee %</th>
                    <th>Fee Amount</th>
                    <th>Agent Commission</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var subtotal in subtotals)
                {
                    var feeAmount = Math.Max(Math.Round(subtotal.Total * subtotal.Agent.Settings.CommissionFeePercent, 2), 0);
                    feeTotal += feeAmount;
                    var agentAmount = Math.Max(subtotal.Total - feeAmount, 0);

                    <tr>
                        <td>
                           @subtotal.Agent.FullName
                        </td>
                        <td>
                            @subtotal.Total.ToString("C")
                        </td>
                        <td>
                            @subtotal.Agent.Settings.CommissionFeePercent.ToString("P0")
                        </td>
                        <td>
                            @feeAmount.ToString("C")
                        </td>
                        <td>
                            @agentAmount.ToString("C")
                        </td>
                    </tr>
                }
                <tr>
                    <td class="footer-title">
                        Total
                    </td>
                    <td>
                        @totalCommission.ToString("C")
                    </td>
                    <td></td>
                    <td>
                        @feeTotal.ToString("C")
                    </td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </body>
</html>
